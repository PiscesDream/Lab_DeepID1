name: "DeepID"
input: "data"
input_shape {
    dim: 10
    dim: 3
    dim: 80 
    dim: 80 
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 20
    kernel_size: 4
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 40
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 60
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  convolution_param {
    num_output: 80
    kernel_size: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "conv4deepid"
  type: "InnerProduct"
  bottom: "conv4"
  top: "conv4deepid"
  inner_product_param {
    num_output: 160 
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "pool3deepid"
  type: "InnerProduct"
  bottom: "pool3"
  top: "pool3deepid"
  inner_product_param {
    num_output: 160 
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "deepid__"
  type: "Eltwise"
  bottom: "conv4deepid"
  bottom: "pool3deepid"
  top: "deepid__"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "deepid"
  type: "ReLU"
  bottom: "deepid__"
  top: "deepid"
}
layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "deepid"
  top: "fc"
  inner_product_param {
    num_output: 4000
    weight_filler {
      type: "xavier"
    }
  }
}

